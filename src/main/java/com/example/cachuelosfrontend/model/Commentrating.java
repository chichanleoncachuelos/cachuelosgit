package com.example.cachuelosfrontend.model;

// Generated 05-oct-2014 14:18:06 by Hibernate Tools 3.4.0.CR1

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.codehaus.jackson.annotate.JsonIgnore;

import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlTransient;

/**
 * Commentrating generated by hbm2java
 */
@Entity
@Table(name = "commentrating"
      , catalog = "cachuelos")
@XmlRootElement
public class Commentrating implements java.io.Serializable
{

   private Integer idComment;
   private Commentratingtype commentratingtype;
   private Cachuelo cachuelo;
   private User user;
   private Date createdAt;
   private String updatedAt;
   private String comment;
   private Integer stars;

   public Commentrating()
   {
   }

   public Commentrating(Commentratingtype commentratingtype, Cachuelo cachuelo, User user, Date createdAt, String comment)
   {
      this.commentratingtype = commentratingtype;
      this.cachuelo = cachuelo;
      this.user = user;
      this.createdAt = createdAt;
      this.comment = comment;
   }

   public Commentrating(Commentratingtype commentratingtype, Cachuelo cachuelo, User user, Date createdAt, String updatedAt, String comment, Integer stars)
   {
      this.commentratingtype = commentratingtype;
      this.cachuelo = cachuelo;
      this.user = user;
      this.createdAt = createdAt;
      this.updatedAt = updatedAt;
      this.comment = comment;
      this.stars = stars;
   }

   @Id
   @GeneratedValue(strategy = IDENTITY)
   @Column(name = "idComment", unique = true, nullable = false)
   public Integer getIdComment()
   {
      return this.idComment;
   }

   public void setIdComment(Integer idComment)
   {
      this.idComment = idComment;
   }

   @ManyToOne(fetch = FetchType.EAGER)
   @JoinColumn(name = "idCommentType", nullable = false)
   public Commentratingtype getCommentratingtype()
   {
      return this.commentratingtype;
   }

   public void setCommentratingtype(Commentratingtype commentratingtype)
   {
      this.commentratingtype = commentratingtype;
   }

   @XmlTransient
   @JsonIgnore
   @ManyToOne(fetch = FetchType.LAZY)
   @JoinColumn(name = "idCachuelo", nullable = false)
   public Cachuelo getCachuelo()
   {
      return this.cachuelo;
   }

   public void setCachuelo(Cachuelo cachuelo)
   {
      this.cachuelo = cachuelo;
   }

   @ManyToOne(fetch = FetchType.EAGER)
   @JoinColumn(name = "idUserPoster", nullable = false)
   public User getUser()
   {
      return this.user;
   }

   public void setUser(User user)
   {
      this.user = user;
   }

   @Temporal(TemporalType.TIMESTAMP)
   @Column(name = "created_at", nullable = false, length = 19)
   public Date getCreatedAt()
   {
      return this.createdAt;
   }

   public void setCreatedAt(Date createdAt)
   {
      this.createdAt = createdAt;
   }

   @Column(name = "updated_at", length = 20)
   public String getUpdatedAt()
   {
      return this.updatedAt;
   }

   public void setUpdatedAt(String updatedAt)
   {
      this.updatedAt = updatedAt;
   }

   @Column(name = "comment", nullable = false, length = 300)
   public String getComment()
   {
      return this.comment;
   }

   public void setComment(String comment)
   {
      this.comment = comment;
   }

   @Column(name = "stars")
   public Integer getStars()
   {
      return this.stars;
   }

   public void setStars(Integer stars)
   {
      this.stars = stars;
   }

	public String toString() {
		StringBuilder buffer = new StringBuilder();
		buffer.append(comment);
		return buffer.toString();
	}
}
