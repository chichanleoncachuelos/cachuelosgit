package com.example.cachuelosfrontend.model;

// Generated 05-oct-2014 14:18:06 by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Transient;

import org.codehaus.jackson.annotate.JsonIgnore;

import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlTransient;

/**
 * Location generated by hbm2java
 */
@Entity
@Table(name = "location", catalog = "cachuelos")
@XmlRootElement
public class Location implements java.io.Serializable
{

   private Integer idLocation;
   private User user;
   private double lat;
   private double lng;
   private Integer isFavorite;
   private boolean favorite;
   private String name;
   private Set<Cachuelo> cachuelos = new HashSet<Cachuelo>(0);

   public Location()
   {
   }

   public Location(User user, double lat, double lng, String name)
   {
      this.user = user;
      this.lat = lat;
      this.lng = lng;
      this.name = name;
   }

   public Location(User user, double lat, double lng, Integer isFavorite,
         String name, Set<Cachuelo> cachuelos)
   {
      this.user = user;
      this.lat = lat;
      this.lng = lng;
      this.isFavorite = isFavorite;
      this.name = name;
      this.cachuelos = cachuelos;
   }
   
   	@Transient
	public boolean getFavorite() {
		return favorite;
	}

	public void setFavorite(boolean favorite) {
		this.favorite = favorite;
	}

   @Id
   @GeneratedValue(strategy = IDENTITY)
   @Column(name = "idLocation", unique = true, nullable = false)
   public Integer getIdLocation()
   {
      return this.idLocation;
   }

   public void setIdLocation(Integer idLocation)
   {
      this.idLocation = idLocation;
   }
   @XmlTransient
   @JsonIgnore
   @ManyToOne(fetch = FetchType.LAZY)
   @JoinColumn(name = "idUserCreator", nullable = false)
   public User getUser()
   {
      return this.user;
   }

   public void setUser(User user)
   {
      this.user = user;
   }

   @Column(name = "lat", nullable = false, precision = 22, scale = 0)
   public double getLat()
   {
      return this.lat;
   }

   public void setLat(double lat)
   {
      this.lat = lat;
   }

   @Column(name = "lng", nullable = false, precision = 22, scale = 0)
   public double getLng()
   {
      return this.lng;
   }

   public void setLng(double lng)
   {
      this.lng = lng;
   }

   @Column(name = "isFavorite")
   public Integer getIsFavorite()
   {
      return this.isFavorite;
   }

   public void setIsFavorite(Integer isFavorite)
   {
      this.isFavorite = isFavorite;
   }

   @Column(name = "name", nullable = false, length = 30)
   public String getName()
   {
      return this.name;
   }

   public void setName(String name)
   {
      this.name = name;
   }

   @XmlTransient
   @JsonIgnore
   @OneToMany(fetch = FetchType.LAZY, mappedBy = "location")
   public Set<Cachuelo> getCachuelos()
   {
      return this.cachuelos;
   }

   public void setCachuelos(Set<Cachuelo> cachuelos)
   {
      this.cachuelos = cachuelos;
   }
   
	public String toString() {
		StringBuilder buffer = new StringBuilder();
		buffer.append(name);
		return buffer.toString();
	}

}
