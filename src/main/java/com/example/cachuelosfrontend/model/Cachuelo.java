package com.example.cachuelosfrontend.model;

// Generated 05-oct-2014 14:18:06 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

import org.codehaus.jackson.annotate.JsonIgnore;

import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlTransient;

/**
 * Cachuelo generated by hbm2java
 */
@Entity
@Table(name = "cachuelo"
      , catalog = "cachuelos")
@XmlRootElement
public class Cachuelo implements java.io.Serializable
{

   private Integer idCachuelo;
   private Typecachuelo typecachuelo;
   private Cachuelostate cachuelostate;
   private Location location;
   private User user;
   private Date createdAt;
   private String updatedAt;
   private String name;
   private String description;
   private String price;
   private String toBeCompleteAt;
   private String finalPrice;
   private Set<Commentrating> commentratings = new HashSet<Commentrating>(0);
   private Set<Offer> offers = new HashSet<Offer>(0);
   private Set<Imagecachuelo> imagecachuelos = new HashSet<Imagecachuelo>(0);
   private Set<Message> messages = new HashSet<Message>(0);
   private Integer isAssignedToMe=0;
   private Integer tmpC=0;

   public Cachuelo()
   {
   }

   public Cachuelo(Typecachuelo typecachuelo, User user, Date createdAt, String name)
   {
      this.typecachuelo = typecachuelo;
      this.user = user;
      this.createdAt = createdAt;
      this.name = name;
   }

   public Cachuelo(Typecachuelo typecachuelo, Cachuelostate cachuelostate, Location location, User user, Date createdAt, String updatedAt, String name, String description, String price, String toBeCompleteAt, String finalPrice, Set<Commentrating> commentratings, Set<Offer> offers, Set<Imagecachuelo> imagecachuelos, Set<Message> messages)
   {
      this.typecachuelo = typecachuelo;
      this.cachuelostate = cachuelostate;
      this.location = location;
      this.user = user;
      this.createdAt = createdAt;
      this.updatedAt = updatedAt;
      this.name = name;
      this.description = description;
      this.price = price;
      this.toBeCompleteAt = toBeCompleteAt;
      this.finalPrice = finalPrice;
      this.commentratings = commentratings;
      this.offers = offers;
      this.imagecachuelos = imagecachuelos;
      this.messages = messages;
   }
   
   @Transient
   public Integer getIsAssignedToMe() {
		return isAssignedToMe;
	}

	public void setIsAssignedToMe(Integer isAssignedToMe) {
		this.isAssignedToMe = isAssignedToMe;
	}
	
	@Transient
	public Integer getTmpC() {
		return tmpC;
	}

	public void setTmpC(Integer tmpC) {
		this.tmpC = tmpC;
	}

   @Id
   @GeneratedValue(strategy = IDENTITY)
   @Column(name = "idCachuelo", unique = true, nullable = false)
   public Integer getIdCachuelo()
   {
      return this.idCachuelo;
   }

   public void setIdCachuelo(Integer idCachuelo)
   {
      this.idCachuelo = idCachuelo;
   }

   @ManyToOne(fetch = FetchType.EAGER)
   @JoinColumn(name = "idTypeCachuelo", nullable = false)
   public Typecachuelo getTypecachuelo()
   {
      return this.typecachuelo;
   }

   public void setTypecachuelo(Typecachuelo typecachuelo)
   {
      this.typecachuelo = typecachuelo;
   }

   @ManyToOne(fetch = FetchType.EAGER)
   @JoinColumn(name = "idCachueloState")
   public Cachuelostate getCachuelostate()
   {
      return this.cachuelostate;
   }

   public void setCachuelostate(Cachuelostate cachuelostate)
   {
      this.cachuelostate = cachuelostate;
   }

   @ManyToOne(fetch = FetchType.EAGER)
   @JoinColumn(name = "idLocation")
   public Location getLocation()
   {
      return this.location;
   }

   public void setLocation(Location location)
   {
      this.location = location;
   }

   @ManyToOne(fetch = FetchType.EAGER)
   @JoinColumn(name = "idUserPoster", nullable = false)
   public User getUser()
   {
      return this.user;
   }

   public void setUser(User user)
   {
      this.user = user;
   }

   @Temporal(TemporalType.TIMESTAMP)
   @Column(name = "created_at", nullable = false, length = 19)
   public Date getCreatedAt()
   {
      return this.createdAt;
   }

   public void setCreatedAt(Date createdAt)
   {
      this.createdAt = createdAt;
   }

   @Column(name = "updated_at", length = 20)
   public String getUpdatedAt()
   {
      return this.updatedAt;
   }

   public void setUpdatedAt(String updatedAt)
   {
      this.updatedAt = updatedAt;
   }

   @Column(name = "name", nullable = false, length = 20)
   public String getName()
   {
      return this.name;
   }

   public void setName(String name)
   {
      this.name = name;
   }

   @Column(name = "description", length = 300)
   public String getDescription()
   {
      return this.description;
   }

   public void setDescription(String description)
   {
      this.description = description;
   }

   @Column(name = "price", length = 20)
   public String getPrice()
   {
      return this.price;
   }

   public void setPrice(String price)
   {
      this.price = price;
   }

   @Column(name = "toBeCompleteAt", length = 30)
   public String getToBeCompleteAt()
   {
      return this.toBeCompleteAt;
   }

   public void setToBeCompleteAt(String toBeCompleteAt)
   {
      this.toBeCompleteAt = toBeCompleteAt;
   }

   @Column(name = "finalPrice", length = 20)
   public String getFinalPrice()
   {
      return this.finalPrice;
   }

   public void setFinalPrice(String finalPrice)
   {
      this.finalPrice = finalPrice;
   }

   @OneToMany(fetch = FetchType.EAGER, mappedBy = "cachuelo")
   public Set<Commentrating> getCommentratings()
   {
      return this.commentratings;
   }

   public void setCommentratings(Set<Commentrating> commentratings)
   {
      this.commentratings = commentratings;
   }
   
   @XmlTransient
   @JsonIgnore
   @OneToMany(fetch = FetchType.LAZY, mappedBy = "cachuelo")
   public Set<Offer> getOffers()
   {
      return this.offers;
   }

   public void setOffers(Set<Offer> offers)
   {
      this.offers = offers;
   }

   @OneToMany(fetch = FetchType.EAGER, mappedBy = "cachuelo")
   public Set<Imagecachuelo> getImagecachuelos()
   {
      return this.imagecachuelos;
   }

   public void setImagecachuelos(Set<Imagecachuelo> imagecachuelos)
   {
      this.imagecachuelos = imagecachuelos;
   }

   @XmlTransient
   @JsonIgnore
   @OneToMany(fetch = FetchType.LAZY, mappedBy = "cachuelo")
   public Set<Message> getMessages()
   {
      return this.messages;
   }

   public void setMessages(Set<Message> messages)
   {
      this.messages = messages;
   }

	public String toString() {

		StringBuilder buffer = new StringBuilder();
		buffer.append(name);
		return buffer.toString();
	}
}
