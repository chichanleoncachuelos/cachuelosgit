package com.example.cachuelosfrontend.model;

// Generated 05-oct-2014 14:18:06 by Hibernate Tools 3.4.0.CR1

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlTransient;

import org.codehaus.jackson.annotate.JsonIgnore;

/**
 * Message generated by hbm2java
 */
@Entity
@Table(name = "message"
      , catalog = "cachuelos")
@XmlRootElement
public class Message implements java.io.Serializable
{

   private Integer idMessage;
   private User userByIdReceiver;
   private User userByIdUserSender;
   private User userToReply;//solo para uso interno del chat
   private Cachuelo cachuelo;
   private String message;
   private boolean mine;
   private Date createdAt;

   public Message()
   {
   }

   public Message(User userByIdReceiver, User userByIdUserSender, String message, Date createdAt)
   {
      this.userByIdReceiver = userByIdReceiver;
      this.userByIdUserSender = userByIdUserSender;
      this.message = message;
      this.createdAt = createdAt;
   }

   public Message(User userByIdReceiver, User userByIdUserSender, Cachuelo cachuelo, String message, Date createdAt)
   {
      this.userByIdReceiver = userByIdReceiver;
      this.userByIdUserSender = userByIdUserSender;
      this.cachuelo = cachuelo;
      this.message = message;
      this.createdAt = createdAt;
   }     

   @Id
   @GeneratedValue(strategy = IDENTITY)
   @Column(name = "idMessage", unique = true, nullable = false)
   public Integer getIdMessage()
   {
      return this.idMessage;
   }

   public void setIdMessage(Integer idMessage)
   {
      this.idMessage = idMessage;
   }

   
   @ManyToOne(fetch = FetchType.EAGER)
   @JoinColumn(name = "idReceiver", nullable = false)
   public User getUserByIdReceiver()
   {
      return this.userByIdReceiver;
   }

   public void setUserByIdReceiver(User userByIdReceiver)
   {
      this.userByIdReceiver = userByIdReceiver;
   }

   
   @ManyToOne(fetch = FetchType.EAGER)
   @JoinColumn(name = "idUserSender", nullable = false)
   public User getUserByIdUserSender()
   {
      return this.userByIdUserSender;
   }

   public void setUserByIdUserSender(User userByIdUserSender)
   {
      this.userByIdUserSender = userByIdUserSender;
   }

   @XmlTransient
   @JsonIgnore
   @ManyToOne(fetch = FetchType.EAGER)
   @JoinColumn(name = "idCachuelo")
   public Cachuelo getCachuelo()
   {
      return this.cachuelo;
   }

   public void setCachuelo(Cachuelo cachuelo)
   {
      this.cachuelo = cachuelo;
   }

   @Column(name = "message", nullable = false, length = 256)
   public String getMessage()
   {
      return this.message;
   }

   public void setMessage(String message)
   {
      this.message = message;
   }
   
   	@Transient 
	public User getUserToReply() {
		return userToReply;
	}

	public void setUserToReply(User userToReply) {
		this.userToReply = userToReply;
	}
   
   	@Transient 
	public boolean getMine() {
		return mine;
	}

	public void setMine(boolean mine) {
		this.mine = mine;
	}

   @Temporal(TemporalType.TIMESTAMP)
   @Column(name = "created_at", nullable = false, length = 19)
   public Date getCreatedAt()
   {
      return this.createdAt;
   }

   public void setCreatedAt(Date createdAt)
   {
      this.createdAt = createdAt;
   }
   
	public String toString() {
		StringBuilder buffer = new StringBuilder();
		buffer.append(message);
		return buffer.toString();
	}

}
